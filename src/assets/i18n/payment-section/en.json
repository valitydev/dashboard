{
    "analytics": {
        "noData": "No data",
        "paymentTools": "Payment instruments",
        "paymentsAmount": "Turnover",
        "paymentsCount": "Number of payments",
        "stats": {
            "averagePayment": "Average payment amount",
            "paymentsAmount": "Turnover for a period",
            "paymentsCount": "Number of payments",
            "refundsAmount": "Returns for the period"
        },
        "unsuccessfulPaymentReasons": "Reasons for unsuccessful payments"
    },
    "apiKey": {
        "api": "API",
        "copy": "Copy",
        "description": "Your private key to access",
        "title": "API key"
    },
    "balances": {
        "title": "Available funds"
    },
    "createInvoiceDialog": {
        "title": "Creating an invoice"
    },
    "createInvoiceOrInvoiceTemplate": {
        "description": "Payment link is a tool for accepting payments according to a set invoice template. Here you can generate an invoice template with the required parameters and then generate a payment link for payment. The link can be placed both on the website and in social networks and allows you to make multiple payments, each time creating a unique invoice for the client. This tool is designed to pay for a single item or service.",
        "invoiceTitle": "Create invoice",
        "title": "Payment link",
        "types": {
            "personal": "Create a personal payment link to pay for a specific order",
            "reusable": "Create a reusable payment link to pay for multiple customer orders"
        }
    },
    "createInvoiceTemplate": {
        "form": {
            "cart": {
                "add": "+ Add product or service",
                "amount": "Price",
                "description": "Description",
                "quantity": "Quantity",
                "remove": "Delete",
                "summary": "Total goods and services amounting to",
                "title": "Products and services list"
            },
            "cost": "Cost of the offered goods or services",
            "invoiceTemplateType": "Template type",
            "invoiceTemplateTypeCostType": "Тип ограничения стоимости",
            "lifetime": "Окончание срока действия инвойса",
            "lowerBound": "Нижняя граница стоимости",
            "product": "Наименование предлагаемых товаров или услуг",
            "shop": "Магазин",
            "taxMode": "Схема налогообложения",
            "upperBound": "Верхняя граница стоимости",
            "withoutVAT": "без НДС"
        },
        "invoiceTemplateCostType": {
            "InvoiceTemplateLineCostFixed": "Фиксированная",
            "InvoiceTemplateLineCostRange": "Диапазон",
            "InvoiceTemplateLineCostUnlim": "Без ограничений"
        },
        "invoiceTemplateType": {
            "InvoiceTemplateMultiLine": "Корзина товаров",
            "InvoiceTemplateSingleLine": "Одиночная позиция"
        },
        "title": "Создание шаблона инвойса"
    },
    "createPaymentLinkDialog": {
        "create": "Сформировать ссылку на оплату",
        "title": "Создание платежной ссылки"
    },
    "digitalWallet": {
        "DigitalWalletDetailsQIWI": "QIWI"
    },
    "integrations": {
        "tabs": {
            "api-key": "API КЛЮЧ",
            "payment-link": "ПЛАТЕЖНАЯ ССЫЛКА",
            "webhooks": "WEBHOOKS"
        }
    },
    "invoices": {
        "createButton": "Создать инвойс"
    },
    "noShopsAlert": {
        "action": "Перейти в раздел",
        "description": "Магазины отсутствуют. Создать новый магазин возможно в разделе \"Магазины\"."
    },
    "operations": {
        "invoices": {
            "actions": {
                "cancel": "Отмена",
                "cancelInvoice": "Отменить инвойс",
                "confirm": "Подтвердить",
                "createPaymentLink": "Сформировать ссылку на оплату",
                "fulfillInvoice": "Погасить инвойс",
                "invoiceCancelled": "Инвойс успешно отменен",
                "invoiceCreated": "Инвойс успешно создан",
                "invoiceFulfilled": "Инвойс успешно погашен",
                "reason": "Причина",
                "title": "Действия"
            },
            "cartInfo": {
                "description": "Описание товара или услуги",
                "price": "Цена",
                "quantity": "Количество",
                "tax": "Ставка налога",
                "title": "Корзина с набором товаров и услуг"
            },
            "header": "Инвойс",
            "headerRow": {
                "amount": "Стоимость",
                "createdAt": "Создан",
                "productName": "Наименование",
                "shop": "Магазин",
                "status": "Статус"
            },
            "invoiceStatus": "Статус инвойса",
            "payments": {
                "payment": "Платеж",
                "showMore": "Показать еще",
                "title": "Платежи"
            },
            "shop": "Магазин"
        },
        "payments": {
            "details": {
                "name": "Платеж"
            },
            "filter": {
                "bankCardPaymentSystem": "Payment system",
                "bankCardTokenProvider": "Payment token provider",
                "binPan": "Card",
                "card": "Card",
                "customerID": "Payer Id",
                "first6": "Card issuing bank BIN",
                "invoices": "Invoices",
                "last4": "Card last digits",
                "payerEmail": "Payer email",
                "paymentAmount": "Payment amount",
                "paymentAmountFrom": "Min. amount",
                "paymentAmountTo": "Max. amount",
                "paymentStatus": "Payment status",
                "rrn": "Payment RRN",
                "shops": "Stores"
            },
            "table": {
                "amount": "Write-off amount",
                "shop": "Store",
                "status": "Status",
                "statusChanged": "Status updated"
            }
        },
        "refunds": {
            "emptyRefunds": "There are no refunds",
            "fetchError": "An error occurred while searching for refunds",
            "header": "Refund",
            "headerRow": {
                "amount": "Refund amount",
                "shop": "Store",
                "status": "Status",
                "updatedAt": "Status updated"
            },
            "invoiceInfo": {
                "error": "Failed to get an invoice",
                "title": "Invoice"
            },
            "paymentInfo": {
                "error": "Failed to get an invoice",
                "title": "Payment"
            },
            "refundStatus": "Refund status",
            "shop": "Store"
        },
        "tabs": {
            "invoices": "INVOICES",
            "payments": "PAYMENTS",
            "refunds": "REFUNDS"
        }
    },
    "paymentDetails": {
        "additionalInfo": {
            "approvalCode": "Authorization Approval Code",
            "externalId": "External ID",
            "rrn": "Retrieval Reference Number",
            "title": "Additional Information"
        },
        "details": {
            "chargeAmount": "Crediting amount",
            "error": "Payment processing error",
            "fee": "Commission"
        },
        "holdDetails": {
            "acceptTitle": "Confirmation of withholding",
            "actions": {
                "accept": "Confirm",
                "deny": "Cancel"
            },
            "activeHoldTutorial": "You can confirm (credit to you) or cancel the withholding (refund to the payer).",
            "amount": "Confirmation amount",
            "availableAmount": "Available amount",
            "cancelTitle": "Canceling the withholding",
            "cancelledHoldMessage": "The funds were returned to the payer.",
            "capturedHoldMessage": "The funds have been credited to you.",
            "confirm": "Confirm",
            "holdDate": "The withholding period is up to",
            "holdWithCancel": "After the withholding period expires, the funds will be returned to the payer.",
            "holdWithCapture": "After the withholding period expires, the funds will be credited to you.",
            "partialAccept": "Partial confirmation",
            "reason": "Reason",
            "title": "Payment was made with withholding"
        },
        "invoiceDetails": {
            "notFound": "No Invoice Found",
            "title": "Invoice"
        },
        "payerDetails": {
            "title": "Payer"
        },
        "paymentTool": {
            "title": "Means of payment"
        },
        "refunds": {
            "createRefund": {
                "amount": "Refund amount",
                "availableRefund": "Available for return",
                "balanceLoading": "The balance data is downloaded ...",
                "confirm": "Confirm",
                "partialRefund": "Partial refund",
                "pending": "Return request sent",
                "reason": "Return reason",
                "successful": "The refund has been successfully completed",
                "title": "Make a refund"
            },
            "errors": {
                "invalidRequest": "Input parameters are incorrect",
                "invoicePaymentAmountExceeded": "Amount available for refund is exceeded"
            },
            "title": "Refunds"
        },
        "shopDetails": {
            "title": "Store"
        },
        "statusDetailItem": {
            "status": "Status"
        }
    },
    "paymentErrorMessage": {
        "authorization_failed": {
            "account_blocked": "Account suspended",
            "account_limit_exceeded": {
                "amount": "Limit on the amount of",
                "message": "Limit on the payer's account is exceeded",
                "number": "Limit on the number of attempts",
                "unknown": "Limit object is unknown"
            },
            "account_not_found": "Account not found",
            "account_stolen": "Account stolen",
            "insufficient_funds": "Не хватает средств",
            "merchant_blocked": "Мерчант заблокирован",
            "message": "Ошибка авторизации платежа у провайдера",
            "operation_blocked": "Операция платежа заблокирована",
            "payment_tool_rejected": {
                "bank_card_rejected": {
                    "card_expired": "Истёк срок действия карты",
                    "card_holder_invalid": "Неверный владелец карты",
                    "card_number_invalid": "Неверный номер карты",
                    "cvv_invalid": "Неверный CVV код",
                    "issuer_not_found": "Эмитент не найден",
                    "message": "Банковская карта отклонена",
                    "unknown": "Причина неизвестна"
                },
                "message": "Платёжный интрумент отклонён",
                "unknown": "Неизвестный платёжный интрумент"
            },
            "provider_limit_exceeded": {
                "amount": "Лимит на сумму",
                "message": "Превышен лимит на мерчанта у провайдера (вас или платформы RBKmoney)",
                "number": "Лимит на количество попыток",
                "unknown": "Объект лимита неизвестен"
            },
            "rejected_by_issuer": "Отклонено эмитентом",
            "security_policy_violated": "Нарушения политики безопасности",
            "temporarily_unavailable": "Временная недоступность третьих сторон",
            "unknown": "Неизвестная ошибка авторизации"
        },
        "no_route_found": {
            "message": "Маршрут не найден",
            "risk_score_is_too_high": "Операция с высоким риском",
            "unknown": "Неизвестная ошибка при поиске маршрута"
        },
        "preauthorization_failed": {
            "message": "Ошибка предавторизации (3DS)",
            "three_ds_failed": "Предавторизация закончилась неудачей",
            "three_ds_not_finished": "Предавторизация не закончена",
            "unknown": "Неизвестная ошибка предавторизации"
        },
        "rejected_by_inspector": "Отклонено сервисом противодействия мошенничеству",
        "timeout": "Превышен лимит ожидания",
        "unknownError": "Неизвестная ошибка"
    },
    "paymentLink": {
        "back": "Назад",
        "clearForm": "Очистить форму",
        "create": "Сформировать ссылку на оплату",
        "errors": {
            "createPaymentLinkError": "Не удалось создать платежную ссылку"
        },
        "title": "Создание платежной ссылки"
    },
    "paymentSection": {
        "nav": {
            "analytics": "Аналитика",
            "integrations": "Интеграция",
            "operations": "Операции",
            "payouts": "Возмещения",
            "reports": "Отчеты",
            "shops": "Магазины",
            "testEnv": "Тест. окружение"
        }
    },
    "paymentTerminal": {
        "provider": {
            "alipay": "Alipay",
            "euroset": "Евросеть",
            "qps": "Система быстрых платежей (СБП)",
            "wechat": "WeChat",
            "zotapay": "ZotaPay"
        }
    },
    "payouts": {
        "createPayoutReport": {
            "cancel": "Отмена",
            "create": "Сформировать",
            "descriptionStep1": "A report with the transactions register will be generated. This will take some time. Downloading the report and tracking the formation status is possible in the \"Reports\" section",
            "descriptionStep2": "The report was successfully created and is in the process of forming. You can download the report and track its status in the \"Reports\" section",
            "title": "Forming a report with the register of operations",
            "toReports": "Go to \"Reports\" section"
        },
        "errors": {
            "createError": "An error occurred while trying to create a refund",
            "createReportError": "Failed to create report"
        },
        "headerRow": {
            "amount": "Amount",
            "createdAt": "Date of refund",
            "payoutTool": "Output facility",
            "shop": "Store"
        },
        "panel": {
            "actions": "Actions",
            "createReport": "Generate a register of operations",
            "payoutID": "Payout #{{num}}",
            "shop": "Store"
        },
        "payouts": {
            "amount": "Write-off amount",
            "any": "Any",
            "createPayout": "Create a payout",
            "created": "A request for payment has been successfully created",
            "noPayoutTools": "There are no withdrawal tools available",
            "payoutTool": "Withdrawal tool",
            "shop": "Store",
            "title": "Creating a payout to a wallet"
        }
    },
    "reportTypesFilter": {
        "activeLabel": "Types of formation",
        "label": "All types of formation"
    },
    "reports": {
        "cancelReport": {
            "successfullyCanceled": "Report successfully cancelled"
        },
        "createReport": {
            "create": "Generate",
            "form": {
                "any": "Any",
                "from": "Start of the period",
                "shop": "Store",
                "time": "Time",
                "to": "End of the period"
            },
            "subtitle": "Отчет с реестром операций за выбранный период",
            "successfullyCreated": "Отчет успешно создан",
            "title": "Параметры формирования отчета"
        },
        "errors": {
            "cancelError": "Не удалось отменить отчет",
            "createError": "Не удалось создать отчет",
            "downloadReportError": "Не удалось загрузить документы",
            "fetchError": "Не удалось получить отчеты"
        },
        "headerRow": {
            "createdAt": "Дата создания",
            "period": "Период отчетности",
            "status": "Статус",
            "type": "Тип формирования"
        },
        "openCreateReport": "Создать отчет",
        "reportContent": {
            "header": "Отчет"
        },
        "reportDetails": {
            "actions": {
                "cancelReport": "Отменить отчет",
                "title": "Действия"
            },
            "createdAt": "Дата создания",
            "period": "Период отчетности",
            "shop": "Магазин",
            "status": "Статус",
            "type": "Тип формирования"
        },
        "reportFiles": {
            "downloadAll": "Загрузить все",
            "title": "Документы"
        },
        "searchFilters": {
            "dateRangeDescription": "Период создания отчетов"
        }
    },
    "shops": {
        "activate": {
            "error": "Произошла ошибка при активации магазина",
            "success": "Магазин активирован"
        },
        "createShop": "Создать магазин",
        "emptySearchResult": "Магазины отсутствуют",
        "panel": {
            "actions": "Действия",
            "activate": "Активировать магазин",
            "category": "Категория магазина",
            "copy": "Скопировать",
            "createdAt": "Дата и время создания",
            "details": "Детали магазина",
            "id": "Идентификатор магазина",
            "name": "Название магазина",
            "suspend": "Заморозить магазин",
            "url": "URL адрес сайта"
        },
        "shopContract": {
            "error": "Не удалось получить данные контракта",
            "title": "Данные контракта"
        },
        "shopPayoutTool": {
            "error": "Не удалось получить данные средства вывода",
            "title": "Средство вывода"
        },
        "suspend": {
            "error": "Произошла ошибка при заморозке магазина",
            "success": "Магазин заморожен"
        }
    },
    "webhook": {
        "actions": {
            "delete": {
                "buttonTitle": "Удалить webhook",
                "success": "Webhook спешно удален"
            },
            "title": "Действия"
        },
        "create": "Установить webhook",
        "createWebhook": {
            "create": "Установить",
            "eventType": "Предмет оповещений",
            "eventTypes": {
                "customers": "События плательщика",
                "invoices": "События инвойса"
            },
            "events": "События",
            "shop": "Магазин",
            "successfullyCreated": "Webhook успешно создан",
            "title": "Установить новый webhook",
            "types": "Набор типов событий, о которых следует оповещать",
            "url": "URL, на который будут поступать оповещения о произошедших событиях"
        },
        "details": {
            "shop": "Магазин",
            "url": "URL, на который будут поступать оповещения о произошедших событиях"
        },
        "emptyResult": "Webhook’и отсутствуют",
        "errors": {
            "createError": "Произошла ошибка при попытке создать webhook",
            "deleteError": "Произошла ошибка при удалении"
        },
        "events": {
            "title": "Набор событий"
        },
        "headerRow": {
            "shop": "Магазин",
            "url": "URL"
        },
        "key": {
            "buttons": {
                "copy": "Скопировать ключ"
            },
            "publicKey": "Содержимое публичного ключа, служащего для проверки авторитативности приходящих на url оповещений",
            "title": "Публичный ключ"
        },
        "webhook": "Missing value for 'paymentSection.webhook.webhook'"
    }
}
