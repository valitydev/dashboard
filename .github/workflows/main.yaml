name: Main
on:
  push:
    branches: ['master', 'main', 'epic/**']
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/init
      - name: Build
        run: npm run build
      - name: Deploy image
        uses: valitydev/action-deploy-docker@v2
        with:
          registry-username: ${{ github.actor }}
          registry-access-token: ${{ secrets.GITHUB_TOKEN }}
      - name: set config
        run: |
          printf "$APP_ENV_FILE" > dist/appConfig.json
          printf "$AUTH_ENV_FILE" > dist/authConfig.json
          echo $FAVICO | base64 -d > dist/favicon.ico
          printf "$LOGO" > dist/assets/icons/logo.svg
        env:
          APP_ENV_FILE: ${{secrets.APP_CONFIG_CF}}
          AUTH_ENV_FILE: ${{secrets.AUTH_CONFIG_CF}}
          FAVICO: ${{secrets.FAVICON_BASE}}
          LOGO: ${{secrets.LOGO_SVG}}
      - name: Publish to CF Pages
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: 'dashboard'
          directory: 'dist'
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: main
      - name: Mattermost Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: "frontend-deployments"
          SLACK_USERNAME: "Frontend"
          SLACK_ICON_EMOJI: ":tractor:"
          SLACK_WEBHOOK: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_LINK_NAMES: true
          SLACK_FOOTER: ""
          MSG_MINIMAL: true
          SLACK_TITLE: ${{ github.repository }}
          SLACK_MESSAGE: |
            **[${{ github.event.pull_request.title }}](${{ github.server_url }}/${{ github.repository }}|
            /pull/${{ github.event.number }})**

            ${{ github.event.pull_request.body }}
